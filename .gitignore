# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore. For PyCharm
#  Community Edition, use 'PyCharm CE' section.
.idea/

# VS Code
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Windows shortcuts
*.lnk

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# ============================================
# PROJECT SPECIFIC IGNORES
# ============================================

# Trained models (too large for git)
models/*.h5
models/*.keras
models/*.pkl
models/*.joblib
models/*.pb
models/checkpoint/
models/saved_model/

# But keep the models directory structure
!models/.gitkeep

# Downloaded data files
data/*.csv
data/*.json
data/*.parquet
data/*.feather
data/raw/
data/processed/
data/cache/

# But keep the data directory structure
!data/.gitkeep

# Log files
logs/*.log
logs/*.txt
logs/training/
logs/predictions/

# But keep the logs directory structure
!logs/.gitkeep

# Temporary files
temp/
tmp/
*.tmp

# API keys and sensitive configuration
.env.local
.env.production
.env.development
secrets.json
api_keys.json
config_local.py

# Streamlit specific
.streamlit/secrets.toml
.streamlit/config.toml

# Jupyter notebook outputs
*.ipynb
!Stock_Prediction_Colab_Training.ipynb

# Model artifacts and checkpoints
*.ckpt
*.pth
*.weights
checkpoints/
tensorboard_logs/
mlruns/

# Data visualization outputs
plots/
charts/
*.png
*.jpg
*.jpeg
*.svg
!static/

# Performance profiling
*.prof
*.cprof

# Database files
*.db
*.sqlite
*.sqlite3

# Backup files
*.bak
*.backup
*~

# Local test files
test_local.py
debug.py
scratch.py
playground.py

# IDE specific files
.spyderproject
.spyproject
.ropeproject
*.swp
*.swo
*~

# OS generated files
.DS_Store?
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Deployment specific
.vercel
.netlify
.railway
.render

# Local development
local_config.py
dev_settings.py

# Cache directories
.cache/
.parcel-cache/
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test
.env.production
.env.local
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler cache (https://parceljs.org/)
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# ============================================
# ML/DATA SCIENCE SPECIFIC
# ============================================

# Weights & Biases
wandb/

# MLflow
mlruns/
mlartifacts/

# DVC
.dvc/
.dvcignore

# Airflow
airflow.cfg
airflow.db
airflow-webserver.pid
logs/
standalone_admin_password.txt

# Experiment tracking
experiments/
runs/
lightning_logs/

# Large datasets
*.h5
*.hdf5
*.nc
*.zarr

# Model serving
model_server_logs/
serving_logs/

# GPU profiling
*.nvprof
*.prof

# ============================================
# CLOUD DEPLOYMENT SPECIFIC
# ============================================

# Railway
.railway/

# Render
.render/

# Vercel
.vercel/

# Netlify
.netlify/

# Heroku
.heroku/

# Docker
*.dockerfile
docker-compose.override.yml
.dockerignore
